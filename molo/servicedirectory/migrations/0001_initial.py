# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-07-18 12:15
from __future__ import unicode_literals

import django.db.models.deletion
import djgeojson.fields
import molo.servicedirectory.models
from django.contrib.postgres.operations import CreateExtension
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        CreateExtension('citext'),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', molo.servicedirectory.models.CaseInsensitiveTextField(max_length=50, unique=True)),
                ('show_on_home_page', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', molo.servicedirectory.models.CaseInsensitiveTextField(max_length=100, unique=True)),
                ('iso_code', molo.servicedirectory.models.CaseInsensitiveTextField(max_length=3, unique=True)),
            ],
            options={
                'verbose_name_plural': 'countries',
            },
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', molo.servicedirectory.models.CaseInsensitiveTextField(max_length=50, unique=True)),
                ('show_on_home_page', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='KeywordCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='servicedirectory.Category')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servicedirectory.Keyword')),
            ],
            options={
                'verbose_name_plural': 'keyword categories',
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('about', models.CharField(blank=True, max_length=500)),
                ('address', models.CharField(blank=True, max_length=500)),
                ('telephone', models.CharField(blank=True, max_length=50)),
                ('emergency_telephone', models.CharField(blank=True, max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('web', models.URLField(blank=True)),
                ('verified_as', models.CharField(blank=True, max_length=100)),
                ('age_range_min', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('age_range_max', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('opening_hours', models.CharField(blank=True, max_length=50)),
                ('location', djgeojson.fields.PointField()),
                ('facility_code', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='servicedirectory.Category')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servicedirectory.Organisation')),
            ],
            options={
                'verbose_name_plural': 'organisation categories',
            },
        ),
        migrations.CreateModel(
            name='OrganisationIncorrectInformationReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported_at', models.DateTimeField(auto_now_add=True)),
                ('contact_details', models.NullBooleanField()),
                ('address', models.NullBooleanField()),
                ('trading_hours', models.NullBooleanField()),
                ('other', models.NullBooleanField()),
                ('other_detail', models.CharField(blank=True, max_length=500)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servicedirectory.Organisation')),
            ],
            options={
                'verbose_name_plural': 'Organisations - Incorrect Information Reports',
            },
        ),
        migrations.CreateModel(
            name='OrganisationKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='servicedirectory.Keyword')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servicedirectory.Organisation')),
            ],
            options={
                'verbose_name_plural': 'organisation keywords',
            },
        ),
        migrations.CreateModel(
            name='OrganisationRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rated_at', models.DateTimeField(auto_now_add=True)),
                ('rating', models.CharField(choices=[(b'poor', b'Poor'), (b'average', b'Average'), (b'good', b'Good')], max_length=10)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='servicedirectory.Organisation')),
            ],
            options={
                'verbose_name_plural': 'Organisations - Ratings',
            },
        ),
        migrations.AddField(
            model_name='organisation',
            name='categories',
            field=models.ManyToManyField(through='servicedirectory.OrganisationCategory', to='servicedirectory.Category'),
        ),
        migrations.AddField(
            model_name='organisation',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='servicedirectory.Country'),
        ),
        migrations.AddField(
            model_name='organisation',
            name='keywords',
            field=models.ManyToManyField(through='servicedirectory.OrganisationKeyword', to='servicedirectory.Keyword'),
        ),
        migrations.AddField(
            model_name='keyword',
            name='categories',
            field=models.ManyToManyField(through='servicedirectory.KeywordCategory', to='servicedirectory.Category'),
        ),
        migrations.AlterUniqueTogether(
            name='organisationkeyword',
            unique_together=set([('organisation', 'keyword')]),
        ),
        migrations.AlterUniqueTogether(
            name='organisationcategory',
            unique_together=set([('organisation', 'category')]),
        ),
        migrations.AlterUniqueTogether(
            name='keywordcategory',
            unique_together=set([('keyword', 'category')]),
        ),
    ]
